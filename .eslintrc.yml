---
extends:
  - "eslint:recommended"
  - plugin:prettier/recommended
  - plugin:import/recommended
  - plugin:import/typescript
plugins: ["@typescript-eslint", prettier, import]
parser: "@typescript-eslint/parser"
rules:
  class-methods-use-this: 0
  complexity: [warn, { max: 24 }]
  eqeqeq: error
  lines-between-class-members:
    - error
    - always
    - exceptAfterSingleLine: true
  no-constructor-return: error
  no-eval: error
  no-extra-bind: error
  no-implied-eval: error
  no-unneeded-ternary: error
  no-unused-vars: "off"
  no-shadow:
    - error
    - allow: [_, cb, resolve, reject]
  one-var: [error, never]
  prefer-const: error
  semi: [error, always]
  sort-imports:
    - error
    - ignoreDeclarationSort: true
      memberSyntaxSortOrder: [none, all, single, multiple]
  template-curly-spacing: error
  import/dynamic-import-chunkname: 2
  import/order:
    - error
    - alphabetize: { order: asc }
      groups:
        - builtin
        - external
        - internal
        - [sibling, parent]
        - unknown
        - index
      newlines-between: always
  prettier/prettier: error
settings:
  import/cache: { lifetime: 30 }
  import/extensions: [.js, .ts, .jsx, .tsx]
  import/ignore:
    - \.(scss|css)$
  import/parsers: { "@typescript-eslint/parser": [.ts] }
  import/resolver:
    webpack: { config: "./webpack.config.ts" }
    typescript:
      alwaysTryTypes: true
      project: [src/tsconfig.json, tsconfig.json]
overrides:
  - files: [webpack.config.ts, postcss.config.js, tailwind.config.js]
    env: { node: true, browser: false }
    settings:
      import/core-modules: [os, path, process, fs, crypto, util]
env:
  es6: true
root: true
