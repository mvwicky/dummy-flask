[tool.poetry]
name = "holdmypics"
version = "0.29.0"
description = ""
authors = ["Michael Van Wickle <mvanwickle@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
attrs = "^22.0"
environs = "^9.0"
flask = "^2.0.0"
flask-cors = "^3.0.8"
flask-redis = "^0.4.0"
gunicorn = { version = "^20.0" }
loguru = "^0.6.0"
Pillow = "^9.0.0"
semver = "^2.9.1"
webargs = "^8.0.0"
whitenoise = { version = "^6.0.0", extras = ["brotli"] }
# OCR
pytesseract = { version = "^0.3.4", optional = true }

[tool.poetry.group.dev.dependencies]
isort = "^5.0"
pre-commit = { version = "^3.0.0" }
memory_profiler = { version = "^0.61.0" }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = { version = "^7.0" }
hypothesis = { version = "^6.0.0" }

[tool.poetry.extras]
ocr = ["pytesseract"]

[tool.poetry.scripts]

[tool.poetry.plugins."pytest11"]
holdmyplugin = "tests.holdmyplugin"

[tool.isort]
profile = "black"
known_first_party = ["config", "holdmypics"]
no_lines_before = "LOCALFOLDER"
combine_as_imports = true
add_imports = ["from __future__ import annotations"]
extend_skip_glob = ["**/__version__.py"]

[tool.black]
line-length = 88
skip-numeric-underscore-normalization = true
target-version = ["py38"]

[tool.coverage.run]
branch = true
data_file = ".cache/.cov/.coverage"

[tool.coverage.report]
precision = 2
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
title = "Coverage Report"
directory = ".cache/.cov/htmlcov"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
